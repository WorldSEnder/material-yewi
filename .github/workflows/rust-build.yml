name: Rust

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          profile: minimal

      - name: Restore Rust Cache
        uses: Swatinem/rust-cache@v1

      - name: Run cargo fmt check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --all

  deploy:
    name: Deploy to gh-pages
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Setup trunk
        uses: jetli/trunk-action@v0.1.0
        with:
          version: "latest"

      - name: Restore Rust Cache
        uses: Swatinem/rust-cache@v1

      - name: Build release
        run: ./scripts/build-release.sh

      - name: Deploy
        uses: s0/git-publish-subdir-action@v2.4.0
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: dist
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SQUASH_HISTORY: true
          MESSAGE: "update demo to {long-sha}:\n\n{msg}"
